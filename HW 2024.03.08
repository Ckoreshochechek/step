using System;
using System.Threading;

namespace BusStopSimulation
{
    public class Bus
    {
        public int Number { get; set; }
        public int Capacity { get; set; }
        public int Passengers { get; set; }

        public Bus(int number, int capacity)
        {
            Number = number;
            Capacity = capacity;
            Passengers = 0;
        }

        public void LoadPassengers(int passengersAtStop)
        {
            int space = Capacity - Passengers;
            int boarding = Math.Min(space, passengersAtStop);

            Passengers += boarding;
            Console.WriteLine($"Bus #{Number} took {boarding} passangers. Totall passengers are : {Passengers}");

            Thread.Sleep(1000); 
        }
    }

    public class BusStop
    {
        private int _passengers;
        private readonly Random _random;

        public BusStop()
        {
            _passengers = 0;
            _random = new Random();
        }

        public void NewPassengers()
        {
            _passengers += _random.Next(1, 10);
            Console.WriteLine($"There are {_passengers} passangers at the bus stop");
        }

        public void BusArrival(Bus bus)
        {
            bus.LoadPassengers(_passengers);
            _passengers = Math.Max(0, _passengers - bus.Capacity);
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Bus bus = new Bus(197, 30);
            BusStop busStop = new BusStop();

            while (true)
            {
                busStop.NewPassengers();
                busStop.BusArrival(bus);

                Thread.Sleep(5000); 
            }
        }
    }
}
